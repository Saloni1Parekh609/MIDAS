{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DatasetCreation","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyMGcIs4UoVMc8wRWQBv1FAD"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"MzK0NqMgWHwv"},"source":["#Dataset Generation\n","\n","This notebook contains the code to generate a datatset using the patterns in folder structure.\n","\n","If the notebook is being run on the local system, please download the necessary files from the drive link provided in the code cells.</br>\n","<font color=\"blue\">*Please change the links accordingly*</font>\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"eMxzW0zb8DM1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1617862442519,"user_tz":-330,"elapsed":22814,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"2acfb676-dfca-4167-8d99-da2f08aa75ba"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pW9JUUgC-mBU"},"source":["import cv2 as cv\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import os\n","from collections import Counter \n","import random"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"W_Ay9LVKXxyD"},"source":["#Data for Point 1\n","\n","\n","The folder structure must be:</br>\n","path -> Sample000</br>\n","        ->img000-001.png</BR>\n","        ->img000-002.png</BR>\n","        .....</BR>\n","     -> Sample001</br>\n","        ->img001-001.png</BR>\n","        ->img001-002.png</BR>\n","        .....</BR>\n","     .....</br>\n","     .....</br>\n","     -> Sample062</br>\n","\n","\n","The folder name, for example Sample042 will be used to detect the label 42.\n","\n","Please modify \n"]},{"cell_type":"code","metadata":{"id":"aQ2wwopt2NMm"},"source":["# Point 1's data is accessed via the zip file stored in the drive\n","# This zip file is transferred to the disk of the google colab, \n","# because accessing it from the disk directly is faster than\n","# accessing the images from the drive\n","\n","# Link to the zip file: https://drive.google.com/file/d/1g4dHphWLCX1PisdXacrfw8kdn7MGoxv5/view?usp=sharing\n","!cp -r \"/content/drive/MyDrive/MIDAS/Point1/train.zip\" \"/content/train.zip\" \n","!unzip train.zip"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U9j0CpSb8UO_"},"source":["path = \"/content/drive/MyDrive/MIDAS/train\" "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"So93gnX_-i1G","executionInfo":{"status":"ok","timestamp":1617564753684,"user_tz":-330,"elapsed":977,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"1932eda0-1fc6-46d7-fa3b-b0206f711a99"},"source":["df = pd.DataFrame(columns=['FilePath', 'Label'])\n","i = 0\n","for (root,dirs,files) in os.walk(path, topdown=True):\n","    if i == 0:\n","      i = 1\n","      continue\n","\n","    #print(root)\n","    files_path = ['/content' + root[root.find('/train'):] + '/' + i for i in files] #Appropriate path of root to be added before the image filepath\n","    label = [int(root[-2:])] * len(files_path) #Sample042 -> 42\n","\n","    x = pd.DataFrame(list(zip(files_path, label)), columns=['FilePath', 'Label'])\n","    df = df.append(x)\n","\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FilePath</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>/content/train/Sample061/img061-047.png</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>/content/train/Sample061/img061-008.png</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>/content/train/Sample061/img061-050.png</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>/content/train/Sample061/img061-014.png</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>/content/train/Sample061/img061-004.png</td>\n","      <td>61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                  FilePath Label\n","0  /content/train/Sample061/img061-047.png    61\n","1  /content/train/Sample061/img061-008.png    61\n","2  /content/train/Sample061/img061-050.png    61\n","3  /content/train/Sample061/img061-014.png    61\n","4  /content/train/Sample061/img061-004.png    61"]},"metadata":{"tags":[]},"execution_count":93}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QFDV7hLkCoHh","executionInfo":{"status":"ok","timestamp":1617561359826,"user_tz":-330,"elapsed":986,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"331974d8-041b-41cd-bed1-2679642a6fd0"},"source":["df['Label'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["31    50\n","60    48\n","56    42\n","22    40\n","17    40\n","      ..\n","36    40\n","35    40\n","34    40\n","33    40\n","1     40\n","Name: Label, Length: 62, dtype: int64"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qxn8HASQ-s90","executionInfo":{"status":"ok","timestamp":1617561135016,"user_tz":-330,"elapsed":1051,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"b636e0f2-d17b-425b-f940-5683a495c2ff"},"source":["df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2500, 2)"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"OlLBO0PQK5FC"},"source":["df.to_csv(\"/content/drive/MyDrive/MIDAS/pointOne_cpath.csv\", index=None) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"0Qb6vTNRLHga","executionInfo":{"status":"ok","timestamp":1617566960508,"user_tz":-330,"elapsed":717,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"ed2b8daa-b881-4aae-9752-e65253c1e78b"},"source":["df = pd.read_csv(\"/content/drive/MyDrive/MIDAS/pointOne_cpath.csv\")\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FilePath</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>/content/train/Sample061/img061-047.png</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>/content/train/Sample061/img061-008.png</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>/content/train/Sample061/img061-050.png</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>/content/train/Sample061/img061-014.png</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>/content/train/Sample061/img061-004.png</td>\n","      <td>60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                  FilePath  Label\n","0  /content/train/Sample061/img061-047.png     60\n","1  /content/train/Sample061/img061-008.png     60\n","2  /content/train/Sample061/img061-050.png     60\n","3  /content/train/Sample061/img061-014.png     60\n","4  /content/train/Sample061/img061-004.png     60"]},"metadata":{"tags":[]},"execution_count":118}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kBugkLiISXti","executionInfo":{"status":"ok","timestamp":1617566962888,"user_tz":-330,"elapsed":1021,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"0e65f2d4-1ca0-4b19-fc60-ab7fbda58686"},"source":["#df['Label'] = df['Label'] - 1\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2500, 2)"]},"metadata":{"tags":[]},"execution_count":119}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"p8Kq1KEtScHR","executionInfo":{"status":"ok","timestamp":1617564764392,"user_tz":-330,"elapsed":960,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"c96f012b-6fc7-4535-a63f-b566d1335f8b"},"source":["df.tail()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FilePath</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>35</th>\n","      <td>/content/train/Sample012/img012-013.png</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>/content/train/Sample012/img012-025.png</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>/content/train/Sample012/img012-026.png</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>/content/train/Sample012/img012-001.png</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>/content/train/Sample012/img012-011.png</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                   FilePath Label\n","35  /content/train/Sample012/img012-013.png    11\n","36  /content/train/Sample012/img012-025.png    11\n","37  /content/train/Sample012/img012-026.png    11\n","38  /content/train/Sample012/img012-001.png    11\n","39  /content/train/Sample012/img012-011.png    11"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"eAG-cyIOdqhc"},"source":["fp = list(df['FilePath'])\n","print(len(fp))\n","count = 0\n","for i in fp:\n","  if '(1)' in i:\n","    print(i)\n","    count = count + 1\n","    print(count)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PgXCxNy6etOn","executionInfo":{"status":"ok","timestamp":1617566976129,"user_tz":-330,"elapsed":1257,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"37f7b318-8e29-436a-87f6-8062d3186826"},"source":["df = df[~df['FilePath'].str.contains('\\(1\\)')]\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2480, 2)"]},"metadata":{"tags":[]},"execution_count":120}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"g-Iv8l18LQ1y","executionInfo":{"status":"ok","timestamp":1617562913604,"user_tz":-330,"elapsed":1976,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"727ae55c-f152-40bf-dbe1-33b0900f5a66"},"source":["import matplotlib.pyplot as plt\n","\n","image1 = cv.imread('/content/drive/MyDrive/MIDAS/train/Sample002/img002-001.png', cv.IMREAD_GRAYSCALE)\n","plt.imshow(image1, cmap=\"gray\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f6546cb1e50>"]},"metadata":{"tags":[]},"execution_count":78},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"_xJuBvrGcU3m"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1EHVanAQC-Wo"},"source":["#Point 2\n","\n","The folders taken into consideration must be 001 to 009"]},{"cell_type":"code","metadata":{"id":"AveT5LlKDFrQ"},"source":["sum = 0\n","for (root,dirs,files) in os.walk(path, topdown=True):\n","  for i in lt:\n","    if i in root:\n","      print(root)\n","    #print(len(files))\n","      sum += len(files)\n","\n","print(sum)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":357},"id":"DDr2saubDW5Q","executionInfo":{"status":"ok","timestamp":1617727253217,"user_tz":-330,"elapsed":1792,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"39ef922e-ae87-4f5c-e3e1-2aa5c0df6494"},"source":["df = pd.DataFrame(columns=['FilePath', 'Label'])\n","lt = ['000', '001', '002', '003', '004', '005', '006', '007', '008', '009']\n","\n","check = 0\n","for (root,dirs,files) in os.walk(path, topdown=True):\n","    if check == 0:\n","      check = 1\n","      continue\n","\n","    for i in lt:\n","      if i in root:\n","        print(root)\n","        files_path = ['/content' + root[root.find('/train'):] + '/' + i for i in files]\n","        label = [int(root[-2:])] * len(files_path)\n","\n","        x = pd.DataFrame(list(zip(files_path, label)), columns=['FilePath', 'Label'])\n","        df = df.append(x)\n","\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content/drive/MyDrive/MIDAS/train/Sample002\n","/content/drive/MyDrive/MIDAS/train/Sample005\n","/content/drive/MyDrive/MIDAS/train/Sample004\n","/content/drive/MyDrive/MIDAS/train/Sample003\n","/content/drive/MyDrive/MIDAS/train/Sample008\n","/content/drive/MyDrive/MIDAS/train/Sample001\n","/content/drive/MyDrive/MIDAS/train/Sample006\n","/content/drive/MyDrive/MIDAS/train/Sample007\n","/content/drive/MyDrive/MIDAS/train/Sample009\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FilePath</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>/content/train/Sample002/img002-050.png</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>/content/train/Sample002/img002-031.png</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>/content/train/Sample002/img002-001.png</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>/content/train/Sample002/img002-049.png</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>/content/train/Sample002/img002-026.png</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                  FilePath Label\n","0  /content/train/Sample002/img002-050.png     2\n","1  /content/train/Sample002/img002-031.png     2\n","2  /content/train/Sample002/img002-001.png     2\n","3  /content/train/Sample002/img002-049.png     2\n","4  /content/train/Sample002/img002-026.png     2"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z1_fnyk8Dqyc","executionInfo":{"status":"ok","timestamp":1617727262599,"user_tz":-330,"elapsed":1913,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"092b629f-4311-46cf-e93d-22c44e743908"},"source":["df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(360, 2)"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"nsUx_71cDwWW"},"source":["df.to_csv(\"/content/drive/MyDrive/MIDAS/Point2/one_to_ten.csv\", index=None)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DtpxGzc0EJvn"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3rXafZtzHxZQ"},"source":["#Point 3\n","\n","#Data for Point 1\n","\n","\n","The folder structure must be:</br>\n","path -> 0</br>\n","     -> 1</br>\n","     .....</br>\n","     .....</br>\n","     -> 9</br>\n","\n"]},{"cell_type":"code","metadata":{"id":"K-pAo_8ZHygb"},"source":["#Link for mnistTask.zip: https://drive.google.com/file/d/1bWjl661Kk3xa8MmdXKHAwsr48080LaQG/view?usp=sharing\n","!cp -r \"/content/drive/MyDrive/MIDAS/Point3/mnistTask.zip\" \"/content/mnistTask.zip\"\n","!unzip mnistTask.zip"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R6bO6M64H8bv","executionInfo":{"status":"ok","timestamp":1617862719115,"user_tz":-330,"elapsed":1158,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"472bebbe-12ab-4483-c277-2d33c54dfd10"},"source":["path = \"/content/mnistTask\" #Path to unzipped folder with images\n","sum = 0\n","\n","for (root,dirs,files) in os.walk(path, topdown=True):\n","    print(root)\n","    print(len(files))\n","    #print(len(files))\n","    sum += len(files)\n","\n","print(sum)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/content/mnistTask\n","0\n","/content/mnistTask/7\n","5954\n","/content/mnistTask/4\n","5914\n","/content/mnistTask/8\n","6129\n","/content/mnistTask/2\n","6009\n","/content/mnistTask/0\n","5980\n","/content/mnistTask/1\n","5807\n","/content/mnistTask/5\n","6139\n","/content/mnistTask/3\n","6037\n","/content/mnistTask/9\n","5994\n","/content/mnistTask/6\n","6037\n","60000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"YQQ5rM99IuvZ","executionInfo":{"status":"ok","timestamp":1617862798450,"user_tz":-330,"elapsed":1074,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"cea339ef-5a99-4b54-b0b7-7a2a2cab01e0"},"source":["root[-1:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'6'"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"b1uGUf2UIclF","executionInfo":{"status":"ok","timestamp":1617863741749,"user_tz":-330,"elapsed":2343,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"53e8893c-310e-41f4-b99e-1d39e8eddf60"},"source":["df = pd.DataFrame(columns=['FilePath', 'Label'])\n","i = 0\n","for (root,dirs,files) in os.walk(path, topdown=True):\n","    if i == 0:\n","      i = 1\n","      continue\n","\n","    #print(root)\n","    files_path = [root + '/' + i for i in files] #Add appropriate file path before image filepath\n","    label = [int(root[-1:])] * len(files_path) \n","\n","    x = pd.DataFrame(list(zip(files_path, label)), columns=['FilePath', 'Label'])\n","    df = df.append(x)\n","\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FilePath</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>/content/mnistTask/7/image_024769.jpg</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>/content/mnistTask/7/image_036513.jpg</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>/content/mnistTask/7/image_058261.jpg</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>/content/mnistTask/7/image_009847.jpg</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>/content/mnistTask/7/image_043027.jpg</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                FilePath Label\n","0  /content/mnistTask/7/image_024769.jpg     7\n","1  /content/mnistTask/7/image_036513.jpg     7\n","2  /content/mnistTask/7/image_058261.jpg     7\n","3  /content/mnistTask/7/image_009847.jpg     7\n","4  /content/mnistTask/7/image_043027.jpg     7"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oF_heJoZI1C6","executionInfo":{"status":"ok","timestamp":1617863749559,"user_tz":-330,"elapsed":1166,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"7ceaaf4d-5636-4f8d-908d-38a2050d043c"},"source":["df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 2)"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZXNphR2fI3Qa","executionInfo":{"status":"ok","timestamp":1617863749928,"user_tz":-330,"elapsed":1103,"user":{"displayName":"Saloni Parekh","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GigRkAeLdguHD8uTdcYmYuJQbGjVOo7H6xoSpvg1w=s64","userId":"13474740441446535544"}},"outputId":"ae35bb0e-5e45-4a4f-8945-10696dfe2e34"},"source":["df['Label'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5    6139\n","8    6129\n","6    6037\n","3    6037\n","2    6009\n","9    5994\n","0    5980\n","7    5954\n","4    5914\n","1    5807\n","Name: Label, dtype: int64"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"t8kTbMvoI7Ep"},"source":["df.to_csv('/content/drive/MyDrive/MIDAS/Point3/dataset_p3.csv', index=None)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rIGDv0FIJGjL"},"source":[""],"execution_count":null,"outputs":[]}]}